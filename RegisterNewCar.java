/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SubangsCarRental;

/**
 *
 * @author User
 */
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.table.DefaultTableModel;

public class RegisterNewCar extends javax.swing.JFrame {

    private void populateTableFromFile() {
// Define the file name
    String fileName = "car_info.txt";

    // Read the file and populate the table
    try (BufferedReader reader = new BufferedReader(new FileReader(fileName))) {
        // Clear existing table data
        DefaultTableModel model = (DefaultTableModel) carInfo.getModel();
        model.setRowCount(0);

        int rowNum = 1; // Initialize row number
        
        // Read each line from the file
        String line;
        while ((line = reader.readLine()) != null) {
            // Split each line by ","
            String[] parts = line.split(",");
            
            // Ensure that the parts array has at least 7 elements before accessing them
            if (parts.length >= 7) {
                // Create a new rowData array for each row
                Object[] rowData = new Object[9]; // Array to store data for one row
                
                // Insert row number as the first column
                rowData[0] = rowNum++;
                
                // Store attribute values in the corresponding columns of rowData array
                rowData[1] = parts[0].trim(); // Car ID
                rowData[2] = parts[1].trim(); // Car Model
                rowData[3] = parts[2].trim(); // Car Type
                rowData[4] = parts[3].trim(); // Number of Seats
                rowData[5] = parts[4].trim(); // Car Color
                rowData[6] = parts[5].trim(); // Gearbox
                rowData[7] = parts[6].trim(); // Price /day
                
                // Features might have multiple values, so concatenate them
                StringBuilder features = new StringBuilder();
                for (int i = 7; i < parts.length; i++) {
                    features.append(parts[i].trim());
                    if (i < parts.length - 1) {
                        features.append(", ");
                    }
                }
                rowData[8] = features.toString(); // Features
                
                // Add the rowData to the table
                model.addRow(rowData);
            }
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
}
    /**
     * Creates new form RegisterNewCar1
     */
    public RegisterNewCar() {
        initComponents();
        populateTableFromFile();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CarColor = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        NumSeats = new javax.swing.JComboBox<>();
        carid = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        CarType = new javax.swing.JComboBox<>();
        CarModel = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        carInfo = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        feature5 = new javax.swing.JCheckBox();
        feature4 = new javax.swing.JCheckBox();
        feature3 = new javax.swing.JCheckBox();
        feature2 = new javax.swing.JCheckBox();
        feature1 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        Price = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        mannualGearbox = new javax.swing.JRadioButton();
        autoGearbox = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CarColor.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        CarColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "White", "Gray", "Red", "Yellow", "Green", "Blue" }));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Car Color:");

        backButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        NumSeats.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        NumSeats.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15" }));

        carid.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        carid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caridActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("CarID:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Number of Seats:");

        CarType.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        CarType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sedans", "SUVs", "Trucks", "Hatchbacks", "Coupes", "Vans/Minivans", "Compact Cars", "Luxury Cars", " " }));

        CarModel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Register New Car");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(469, 469, 469))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Car Type:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Car Model:");

        carInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No", "Car ID", "Car Model", " Car Type", "Number of Seats", "Car Color",
                "Gearbox","Price per day","Features"    }
        ));
        jScrollPane1.setViewportView(carInfo);

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        feature5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        feature5.setText("Sunroof");
        feature5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feature5ActionPerformed(evt);
            }
        });

        feature4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        feature4.setText("Air Bags");
        feature4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feature4ActionPerformed(evt);
            }
        });

        feature3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        feature3.setText("Bluetooth");
        feature3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feature3ActionPerformed(evt);
            }
        });

        feature2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        feature2.setText("GPS");
        feature2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feature2ActionPerformed(evt);
            }
        });

        feature1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        feature1.setText("Reverse Backup Camera");
        feature1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feature1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Features:");

        Price.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Price.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "75", "100", "150", "200", "250", "300", "350", "400", "450", "500", " " }));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Price/day:");

        mannualGearbox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        mannualGearbox.setText("Mannual");
        mannualGearbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mannualGearboxActionPerformed(evt);
            }
        });

        autoGearbox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        autoGearbox.setText("Automatic");
        autoGearbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoGearboxActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Gearbox:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CarType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(NumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CarColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(autoGearbox)
                                    .addComponent(mannualGearbox)
                                    .addComponent(CarModel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(128, 128, 128)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(feature4)
                                    .addComponent(feature3)
                                    .addComponent(feature2)
                                    .addComponent(feature1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8)
                                    .addComponent(feature5)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(carid, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(203, 203, 203)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(carid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(feature1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(feature2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(feature3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(feature4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(feature5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CarModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CarType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CarColor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(autoGearbox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mannualGearbox)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
    AdminMenu AdmenuFrame = new AdminMenu();
    // Set the frame visible
    AdmenuFrame.setVisible(true);
    // Close the current frame (Admin_Menu frame)
    dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void caridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caridActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
  // Validate input fields
    if (carid.getText().isEmpty() || CarModel.getText().isEmpty() || Price.getSelectedItem() == null || CarType.getSelectedItem() == null ||
            CarColor.getSelectedItem() == null || NumSeats.getSelectedItem() == null) {
        JOptionPane.showMessageDialog(this, "Please fill in all required fields.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    String gearBox;
    if (autoGearbox.isSelected()) {
        gearBox = "Automatic";
    } else if (mannualGearbox.isSelected()) {
        gearBox = "Manual";
    } else {
    JOptionPane.showMessageDialog(this, "Please select a gearbox.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
    }
        
    // Collect data from GUI components
    String carID = carid.getText();
    String carModel = CarModel.getText();
    String pricePerDay = (String) Price.getSelectedItem();
    String typeOfCar = (String) CarType.getSelectedItem();
    String color = (String) CarColor.getSelectedItem();
    String numberOfSeats = (String) NumSeats.getSelectedItem();

    // Collect selected features from checkboxes
    StringBuilder features = new StringBuilder();
    if (feature1.isSelected()) {
        features.append("Reverse backup camera, ");
    }
    if (feature2.isSelected()) {
        features.append("GPS, ");
    }
    if (feature3.isSelected()) {
        features.append("Bluetooth, ");
    }
    if (feature4.isSelected()) {
        features.append("Air Bags, ");
    }
    if (feature5.isSelected()) {
        features.append("Sunroof, ");
    }

    // Remove the trailing comma and space if features were selected
    if (features.length() > 0) {
        features.setLength(features.length() - 2);
    }
    
    // Check for redundant car plate numbers
    try (BufferedReader reader = new BufferedReader(new FileReader("car_info.txt"))) {
        String line;
        while ((line = reader.readLine()) != null) {
            String[] parts = line.split(",");
            String car = parts[0]; // Store the car ID as a string
            if (car.equals(carID)) { // Use equals() for string comparison
                JOptionPane.showMessageDialog(this, "Redundant car plate number. Please try again!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

    // If the code reaches here, it means the car ID is not redundant, so proceed with writing to the file

    // Format the collected data into a string
    String carinfo = carID + "," + carModel + "," + typeOfCar + "," +  numberOfSeats + "," + color + "," + gearBox  + "," + pricePerDay + "," + features.toString();

    // Write the data to a text file using BufferedWriter
    try (BufferedWriter writer = new BufferedWriter(new FileWriter("car_info.txt", true))) {
        writer.write(carinfo);
        writer.newLine(); // Add a new line after each entry
        System.out.println("Car information saved to file.");
        JOptionPane.showMessageDialog(this, "Car information entered successfully!", "Information", JOptionPane.INFORMATION_MESSAGE);

        // Add the collected data to the table model
        int rowCount = carInfo.getRowCount();
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) carInfo.getModel();
        model.addRow(new Object[]{rowCount + 1, carID, carModel, typeOfCar, numberOfSeats, color, gearBox, pricePerDay, features.toString()});
    } catch (IOException e) {
        System.out.println("An error occurred while writing to the file.");
        e.printStackTrace();
    }
} catch (IOException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Error occurred while reading car information.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void feature5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feature5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feature5ActionPerformed

    private void feature4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feature4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feature4ActionPerformed

    private void feature3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feature3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feature3ActionPerformed

    private void feature2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feature2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feature2ActionPerformed

    private void feature1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feature1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feature1ActionPerformed

    private void mannualGearboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mannualGearboxActionPerformed
             // When manual gearbox is selected, unselect automatic gearbox
    if(mannualGearbox.isSelected()) {
        autoGearbox.setSelected(false);
    }
    }//GEN-LAST:event_mannualGearboxActionPerformed

    private void autoGearboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoGearboxActionPerformed
             // When automatic gearbox is selected, unselect manual gearbox
    if(autoGearbox.isSelected()) {
        mannualGearbox.setSelected(false);
    }
    }//GEN-LAST:event_autoGearboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterNewCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterNewCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterNewCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterNewCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterNewCar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CarColor;
    private javax.swing.JTextField CarModel;
    private javax.swing.JComboBox<String> CarType;
    private javax.swing.JComboBox<String> NumSeats;
    private javax.swing.JComboBox<String> Price;
    private javax.swing.JRadioButton autoGearbox;
    private javax.swing.JButton backButton;
    private javax.swing.JTable carInfo;
    private javax.swing.JTextField carid;
    private javax.swing.JCheckBox feature1;
    private javax.swing.JCheckBox feature2;
    private javax.swing.JCheckBox feature3;
    private javax.swing.JCheckBox feature4;
    private javax.swing.JCheckBox feature5;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton mannualGearbox;
    // End of variables declaration//GEN-END:variables
}
