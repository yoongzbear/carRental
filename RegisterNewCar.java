/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Car_Rental;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.table.DefaultTableModel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
/**
 *
 * @author User
 */
public class RegisterNewCar extends javax.swing.JFrame {

private void populateTableFromFile() {
    // Define the file name
    String fileName = "car_info.txt";

    // Read the file and populate the table
    try (BufferedReader reader = new BufferedReader(new FileReader(fileName))) {
        // Clear existing table data
        DefaultTableModel model = (DefaultTableModel) carInfo.getModel();
        model.setRowCount(0);

        int rowNum = 1; // Initialize row number
        Object[] rowData = new Object[9]; // Array to store data for one row
        
        // Read each line from the file
        String line;
        while ((line = reader.readLine()) != null) {
            // Split each line by ":"
            String[] parts = line.split(":");
            
            // Ensure that the parts array has at least 2 elements before accessing them
            if (parts.length == 2) {
                // Extract attribute name and value
                String attributeName = parts[0].trim();
                String attributeValue = parts[1].trim();
                
                // Store attribute value in the corresponding column of rowData array
                switch (attributeName) {
                    case "Car ID":
                        rowData[1] = attributeValue;
                        break;
                    case "Car Model":
                        rowData[2] = attributeValue;
                        break;
                    case "Car Type":
                        rowData[3] = attributeValue;
                        break;
                    case "Number of Seats":
                        rowData[4] = attributeValue;
                        break;
                    case "Car Color":
                        rowData[5] = attributeValue;
                        break;
                    case "Gearbox":
                        rowData[6] = attributeValue;
                        break;
                    case "Price /day":
                        rowData[7] = attributeValue;
                        break;
                    case "Features":
                        rowData[8] = attributeValue;
                        break;
                }
            }
            
            // If the rowData array is fully populated, add it to the table
            if (rowData[1] != null && rowData[2] != null && rowData[3] != null && rowData[4] != null &&
                rowData[5] != null && rowData[6] != null && rowData[7] != null && rowData[8] != null) {
                // Insert row number as the first column
                rowData[0] = rowNum++;
                
                // Add the rowData to the table
                model.addRow(rowData);
                
                // Reset rowData for the next row
                rowData = new Object[9];
            }
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
}


    /**
     * Creates new form RegisterNewCar
     */
    public RegisterNewCar() {
        initComponents();
        populateTableFromFile();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        CarModel = new javax.swing.JTextField();
        CarType = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        NumSeats = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        CarColor = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        autoGearbox = new javax.swing.JRadioButton();
        mannualGearbox = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        Price = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        feature1 = new javax.swing.JCheckBox();
        feature2 = new javax.swing.JCheckBox();
        feature3 = new javax.swing.JCheckBox();
        feature4 = new javax.swing.JCheckBox();
        feature5 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        carInfo = new javax.swing.JTable();
        Addpic = new javax.swing.JButton();
        Carpic = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        carid = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Car Model:");

        jLabel3.setText("Car Type:");

        CarType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sedans", "SUVs", "Trucks", "Hatchbacks", "Coupes", "Vans/Minivans", "Compact Cars", "Luxury Cars", " " }));

        jLabel4.setText("Number of Seats:");

        NumSeats.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15" }));

        jLabel5.setText("Car Color:");

        CarColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "White", "Gray", "Red", "Yellow", "Green", "Blue" }));

        jLabel6.setText("Gearbox:");

        autoGearbox.setText("Automatic");
        autoGearbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoGearboxActionPerformed(evt);
            }
        });

        mannualGearbox.setText("Mannual");
        mannualGearbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mannualGearboxActionPerformed(evt);
            }
        });

        jLabel7.setText("Price/day:");

        Price.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "75", "100", "150", "200", "250", "300", "350", "400", "450", "500", " " }));

        jLabel8.setText("Features:");

        feature1.setText("Air conditionning");
        feature1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feature1ActionPerformed(evt);
            }
        });

        feature2.setText("GPS");
        feature2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feature2ActionPerformed(evt);
            }
        });

        feature3.setText("Bluetooth");
        feature3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feature3ActionPerformed(evt);
            }
        });

        feature4.setText("Air Bags");
        feature4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feature4ActionPerformed(evt);
            }
        });

        feature5.setText("Sunroof");
        feature5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feature5ActionPerformed(evt);
            }
        });

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        carInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No", "Car ID", "Car Model", " Car Type", "Number of Seats", "Car Color",
                "Gearbox","Price per day","Features"    }
        ));
        jScrollPane1.setViewportView(carInfo);

        Addpic.setText("Select car pic :");
        Addpic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddpicActionPerformed(evt);
            }
        });

        Carpic.setText("jLabel9");

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setFont(new java.awt.Font("Segoe Print", 0, 24)); // NOI18N
        jLabel1.setText("Register New Car");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(482, 482, 482))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("CarID:");

        carid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caridActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CarModel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CarType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CarColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(autoGearbox)
                    .addComponent(mannualGearbox))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(feature4)
                    .addComponent(feature3)
                    .addComponent(feature2)
                    .addComponent(feature1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel8))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Addpic)
                            .addComponent(Carpic)))
                    .addComponent(feature5)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(carid, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(carid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CarModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CarType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CarColor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(autoGearbox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mannualGearbox))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Addpic)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Carpic)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(feature1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(feature2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(feature3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(feature4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(feature5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(backButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void autoGearboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoGearboxActionPerformed
        // When automatic gearbox is selected, unselect manual gearbox
    if(autoGearbox.isSelected()) {
        mannualGearbox.setSelected(false);
    }
    }//GEN-LAST:event_autoGearboxActionPerformed

    private void mannualGearboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mannualGearboxActionPerformed
        // When manual gearbox is selected, unselect automatic gearbox
    if(mannualGearbox.isSelected()) {
        autoGearbox.setSelected(false);
    }
    }//GEN-LAST:event_mannualGearboxActionPerformed

    private void feature1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feature1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feature1ActionPerformed

    private void feature2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feature2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feature2ActionPerformed

    private void feature3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feature3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feature3ActionPerformed

    private void feature4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feature4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feature4ActionPerformed

    private void feature5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feature5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_feature5ActionPerformed

    
// Add this method to write car ID and status to the new file
private void writeCarStatusToFile(String carID,String status, String usedDate, String returnDate) {
    String fileName = "check_car_status.txt";
    
    try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileName, true))) {
        writer.write(carID + "," + status + usedDate + returnDate);
        writer.newLine(); // Add a new line after each entry
        System.out.println("Car status saved to file.");
    } catch (IOException e) {
        System.out.println("An error occurred while writing car status to the file.");
        e.printStackTrace();
    }
}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    
  // Validate input fields
    if (carid.getText().isEmpty() || CarModel.getText().isEmpty() || Price.getSelectedItem() == null || CarType.getSelectedItem() == null ||
            CarColor.getSelectedItem() == null || NumSeats.getSelectedItem() == null) {
        JOptionPane.showMessageDialog(this, "Please fill in all required fields.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    String gearBox;
    if (autoGearbox.isSelected()) {
        gearBox = "Automatic";
    } else if (mannualGearbox.isSelected()) {
        gearBox = "Manual";
    } else {
    JOptionPane.showMessageDialog(this, "Please select a gearbox.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
    }
        
    // Collect data from GUI components
    String carID = carid.getText();
    String carModel = CarModel.getText();
    String pricePerDay = (String) Price.getSelectedItem();
    String typeOfCar = (String) CarType.getSelectedItem();
    String color = (String) CarColor.getSelectedItem();
    String numberOfSeats = (String) NumSeats.getSelectedItem();

    // Collect selected features from checkboxes
    StringBuilder features = new StringBuilder();
    if (feature1.isSelected()) {
        features.append("Air conditioning, ");
    }
    if (feature2.isSelected()) {
        features.append("GPS, ");
    }
    if (feature3.isSelected()) {
        features.append("Bluetooth, ");
    }
    if (feature4.isSelected()) {
        features.append("Air Bags, ");
    }
    if (feature5.isSelected()) {
        features.append("Sunroof, ");
    }

    // Remove the trailing comma and space if features were selected
    if (features.length() > 0) {
        features.setLength(features.length() - 2);
    }
    
    //Get the current number of rows in the table
    int rowCount = carInfo.getRowCount();
    
    // Add the collected data to the table model
    javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) carInfo.getModel();
    model.addRow(new Object[]{rowCount + 1, carID, carModel, typeOfCar, numberOfSeats, color, gearBox, pricePerDay, features.toString()});
    
    
    // Format the collected data into a string
    String carInfo = "Car ID:" + carID + "\n"
            + "Car Model: " + carModel + "\n"
            + "Car Type: " + typeOfCar + "\n"
            + "Number of Seats: " + numberOfSeats + "\n"
            + "Car Color: " + color + "\n"
            + "Gearbox: " + gearBox + "\n"
            + "Price /day: " + pricePerDay + "\n"
            + "Features: " + features.toString() + "\n";

    // Write the data to a text file using BufferedWriter
    try (BufferedWriter writer = new BufferedWriter(new FileWriter("car_info.txt", true))) {
        writer.write(carInfo);
        writer.newLine(); // Add a new line after each entry
        System.out.println("Car information saved to file.");
        writeCarStatusToFile(carID,"Available",",",",");
    } catch (IOException e) {
        System.out.println("An error occurred while writing to the file.");
        e.printStackTrace();
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void AddpicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddpicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddpicActionPerformed

    private void caridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caridActionPerformed
           // TODO add your handling code here:
    }//GEN-LAST:event_caridActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
       backButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                // Create an instance of the RegisterNewCar frame
                AdminMenu AdmenuFrame = new AdminMenu();
                // Set the frame visible
                AdmenuFrame.setVisible(true);
                // Close the current frame (AdminMenu frame)
                dispose();
            }
        });
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterNewcar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterNewcar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterNewcar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterNewcar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            new RegisterNewCar().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addpic;
    private javax.swing.JComboBox<String> CarColor;
    private javax.swing.JTextField CarModel;
    private javax.swing.JComboBox<String> CarType;
    private javax.swing.JLabel Carpic;
    private javax.swing.JComboBox<String> NumSeats;
    private javax.swing.JComboBox<String> Price;
    private javax.swing.JRadioButton autoGearbox;
    private javax.swing.JButton backButton;
    private javax.swing.JTable carInfo;
    private javax.swing.JTextField carid;
    private javax.swing.JCheckBox feature1;
    private javax.swing.JCheckBox feature2;
    private javax.swing.JCheckBox feature3;
    private javax.swing.JCheckBox feature4;
    private javax.swing.JCheckBox feature5;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton mannualGearbox;
    // End of variables declaration//GEN-END:variables
}
